---
name: terraform-apply
packages:
- terraform-package
- terraform-package-0.13
- git
templates:
  data/properties.sh.erb: data/properties.sh
  helpers/ctl_setup.sh: helpers/ctl_setup.sh
  helpers/ctl_utils.sh: helpers/ctl_utils.sh
  bin/post-deploy.erb: bin/post-deploy
  bin/pre-start.erb: bin/pre-start
  bin/post-start.erb: bin/post-start
  bin/run.erb: bin/run
  bin/terraform-plan-apply.erb: bin/terraform-plan-apply
  
  config/terraform-instructions.tf.erb: config/terraform-instructions.tf
  config/terraform.tfvars.json.erb: config/terraform.tfvars.json
  
  bin/envrc.erb: bin/envrc
  bin/setup-user-env.erb: bin/setup-user-env
properties:

  terraform.vars:
    description:
      array of terraform vars to declare 
  terraform.specs:
    description:
      array of terraform file to apply
  terraform.https_proxy:
    description:
      if set, http url to use as proxy env for terraform, eg http://myproxy:3128
  terraform.no_proxy:
    description:
      if set, coma separated list of domain and ips to exclude from proxy (go lang syntax)

  terraform.lifecycle.errand:
    description: plan and apply on bosh errand launch
    default: true

  terraform.lifecycle.post-deploy:
    description: plan and apply on bosh deployment post-deploy
    default: false

  terraform.lifecycle.post-start:
    description:
    default: false

  terraform.lifecycle.pre-start:
    description: plan and apply on bosh instance pre-start
    default: false

  terraform.lifecycle.purge-on-delete-deployment:
    description: should all terraform artifacts be deleted on deployment delete
    default: false
    
