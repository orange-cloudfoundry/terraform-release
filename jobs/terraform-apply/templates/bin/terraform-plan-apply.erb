#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
#source /var/vcap/jobs/terraform-apply/helpers/ctl_setup.sh 'terraform-apply'
# see https://learn.hashicorp.com/terraform/development/running-terraform-in-automation
# see https://learn.hashicorp.com/terraform/development/running-terraform-in-automation#pre-installed-plugins


export PATH=/var/vcap/packages/terraform-package-0.13:$PATH
export STORE_DIR=/var/vcap/store/terraform-apply
export TF_IN_AUTOMATION=notnull
export TF_INPUT=0
export PLUGIN_DIR=/var/vcap/packages/terraform-plugins

<% if_p('terraform.https_proxy') do |proxy| %>
export https_proxy=<%= proxy %>
<% end %>

<% if_p('terraform.https_proxy') do |no_proxy| %>
export no_proxy=<%= no_proxy %>
<% end %>

terraform --version

mkdir -p $STORE_DIR
cd $STORE_DIR

echo "prepare tf files"
ln -sf  /var/vcap/jobs/terraform-apply/config/terraform-instructions.tf terraform-instructions.tf

echo "prepare tf vars"
rm -f $STORE_DIR/tf.tfvars
touch $STORE_DIR/tf.tfvars

<% p('terraform.vars').each do |param| %>
echo '<%= param %>' >> $STORE_DIR/tf.tfvars
<% end %>

#sed -i 's/=/: /g' $STORE_DIR/tf.tfvars


terraform init 
terraform providers



echo "terraform plan"
terraform plan -no-color -out=${STORE_DIR}/tfplan -var-file=$STORE_DIR/tf.tfvars -state=${STORE_DIR}/terraform.tfstate

#set +e # do not exit immediately if a simple command exits with a non-zero status 
echo "terraform apply"
terraform apply -input=false -no-color -auto-approve -var-file=$STORE_DIR/tf.tfvars  ${STORE_DIR}/tfplan
EXITSTATUS=$?

#git add/commit to keep history

echo "terraform-apply is complete; exit status $EXITSTATUS"
exit $EXITSTATUS
